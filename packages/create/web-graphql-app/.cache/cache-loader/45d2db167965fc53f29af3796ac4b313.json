{"remainingRequest":"/Users/philipbalo/sysgears/amplify-app/packages/create/web-graphql-app/node_modules/ts-loader/index.js??ref--16-1!/Users/philipbalo/sysgears/amplify-app/packages/create/web-graphql-app/src/App.tsx","dependencies":[{"path":"/Users/philipbalo/sysgears/amplify-app/packages/create/web-graphql-app/src/App.tsx","mtime":1552573896907},{"path":"/Users/philipbalo/sysgears/amplify-app/packages/create/web-graphql-app/node_modules/cache-loader/dist/cjs.js","mtime":1550649855738},{"path":"/Users/philipbalo/sysgears/amplify-app/packages/create/web-graphql-app/node_modules/ts-loader/index.js","mtime":1550649858334}],"contextDependencies":[],"result":["var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n    return cooked;\n};\nimport { gql } from 'apollo-boost';\nimport * as React from 'react';\nimport { Query } from 'react-apollo';\nvar LOCAL_HELLO = gql(templateObject_1 || (templateObject_1 = __makeTemplateObject([\"\\n  query localHello($subject: String) {\\n    localHello(subject: $subject) @client\\n  }\\n\"], [\"\\n  query localHello($subject: String) {\\n    localHello(subject: $subject) @client\\n  }\\n\"])));\nvar SERVER_HELLO = gql(templateObject_2 || (templateObject_2 = __makeTemplateObject([\"\\n  query serverHello($subject: String) {\\n    hello(subject: $subject)\\n  }\\n\"], [\"\\n  query serverHello($subject: String) {\\n    hello(subject: $subject)\\n  }\\n\"])));\nvar LocalHello = function () { return (React.createElement(Query, { query: LOCAL_HELLO, variables: { subject: 'World' } }, function (_a) {\n    var loading = _a.loading, error = _a.error, data = _a.data;\n    if (loading) {\n        return 'Loading...';\n    }\n    return React.createElement(\"h2\", null,\n        \"Local Salutation: \",\n        error ? error.message : data.localHello);\n})); };\nvar ServerHello = function () { return (React.createElement(Query, { query: SERVER_HELLO, variables: { subject: 'World' } }, function (_a) {\n    var loading = _a.loading, error = _a.error, data = _a.data;\n    if (loading) {\n        return 'Loading...';\n    }\n    return (React.createElement(\"h2\", null,\n        \"Server Salutation:\\u00A0\",\n        error\n            ? error.message + '. You probably don`t have GraphQL Server running at the moment - thats okay'\n            : data.hello));\n})); };\nvar App = function () { return (React.createElement(\"div\", null,\n    React.createElement(\"h1\", null,\n        \"Welcome to your own \",\n        React.createElement(\"a\", { href: \"http://localhost:8080/graphiql\" }, \"GraphQL\"),\n        \" web front end!\"),\n    React.createElement(\"h2\", null, \"You can start editing source code and see results immediately\"),\n    React.createElement(LocalHello, null),\n    React.createElement(ServerHello, null))); };\nexport default App;\nvar templateObject_1, templateObject_2;\n",{"version":3,"file":"/Users/philipbalo/sysgears/amplify-app/packages/create/web-graphql-app/src/App.tsx","sourceRoot":"","sources":["/Users/philipbalo/sysgears/amplify-app/packages/create/web-graphql-app/src/App.tsx"],"names":[],"mappings":";;;;AAAA,OAAO,EAAE,GAAG,EAAE,MAAM,cAAc,CAAC;AACnC,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,KAAK,EAAE,MAAM,cAAc,CAAC;AAErC,IAAM,WAAW,GAAG,GAAG,+JAAA,4FAItB,IAAA,CAAC;AAEF,IAAM,YAAY,GAAG,GAAG,mJAAA,gFAIvB,IAAA,CAAC;AAEF,IAAM,UAAU,GAAG,cAAM,OAAA,CACvB,oBAAC,KAAK,IAAC,KAAK,EAAE,WAAW,EAAE,SAAS,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,IACvD,UAAC,EAAwB;QAAtB,oBAAO,EAAE,gBAAK,EAAE,cAAI;IACtB,IAAI,OAAO,EAAE;QACX,OAAO,YAAY,CAAC;KACrB;IAED,OAAO;;QAAuB,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAM,CAAC;AAC9E,CAAC,CACK,CACT,EAVwB,CAUxB,CAAC;AAEF,IAAM,WAAW,GAAG,cAAM,OAAA,CACxB,oBAAC,KAAK,IAAC,KAAK,EAAE,YAAY,EAAE,SAAS,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,IACxD,UAAC,EAAwB;QAAtB,oBAAO,EAAE,gBAAK,EAAE,cAAI;IACtB,IAAI,OAAO,EAAE;QACX,OAAO,YAAY,CAAC;KACrB;IAED,OAAO,CACL;;QAEG,KAAK;YACJ,CAAC,CAAC,KAAK,CAAC,OAAO,GAAG,6EAA6E;YAC/F,CAAC,CAAC,IAAI,CAAC,KAAK,CACX,CACN,CAAC;AACJ,CAAC,CACK,CACT,EAjByB,CAiBzB,CAAC;AAEF,IAAM,GAAG,GAAG,cAAM,OAAA,CAChB;IACE;;QAAwB,2BAAG,IAAI,EAAC,gCAAgC,cAAY;0BAAoB;IAChG,gGAAsE;IACtE,oBAAC,UAAU,OAAG;IACd,oBAAC,WAAW,OAAG,CACX,CACP,EAPiB,CAOjB,CAAC;AAEF,eAAe,GAAG,CAAC","sourcesContent":["import { gql } from 'apollo-boost';\nimport * as React from 'react';\nimport { Query } from 'react-apollo';\n\nconst LOCAL_HELLO = gql`\n  query localHello($subject: String) {\n    localHello(subject: $subject) @client\n  }\n`;\n\nconst SERVER_HELLO = gql`\n  query serverHello($subject: String) {\n    hello(subject: $subject)\n  }\n`;\n\nconst LocalHello = () => (\n  <Query query={LOCAL_HELLO} variables={{ subject: 'World' }}>\n    {({ loading, error, data }) => {\n      if (loading) {\n        return 'Loading...';\n      }\n\n      return <h2>Local Salutation: {error ? error.message : data.localHello}</h2>;\n    }}\n  </Query>\n);\n\nconst ServerHello = () => (\n  <Query query={SERVER_HELLO} variables={{ subject: 'World' }}>\n    {({ loading, error, data }) => {\n      if (loading) {\n        return 'Loading...';\n      }\n\n      return (\n        <h2>\n          Server Salutation:&nbsp;\n          {error\n            ? error.message + '. You probably don`t have GraphQL Server running at the moment - thats okay'\n            : data.hello}\n        </h2>\n      );\n    }}\n  </Query>\n);\n\nconst App = () => (\n  <div>\n    <h1>Welcome to your own <a href=\"http://localhost:8080/graphiql\">GraphQL</a> web front end!</h1>\n    <h2>You can start editing source code and see results immediately</h2>\n    <LocalHello />\n    <ServerHello />\n  </div>\n);\n\nexport default App;\n"]}]}